
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.pedalgenie'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// 웹 관련 의존
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// 검증 의존
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// API 문서 의존
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	// 보안 의존
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// DB 의존
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.data:spring-data-redis'

	runtimeOnly 'com.mysql:mysql-connector-j'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	// 테스트 검증
	testImplementation 'org.assertj:assertj-core:3.23.1'
	testImplementation 'com.h2database:h2'

	// QueryDSL 설정

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // :jakarta 반드시 붙여야 Q 클래스가 컴파일 가능
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"

	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

tasks.named('test') {
	useJUnitPlatform()
}

/*
 * queryDSL 설정 추가
 */

def generated = 'build/generated'

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(generated)
}

sourceSets {
	main.java.srcDirs += [generated]
}

clean {
	delete file(generated)
}







